// Generated from ./src/antlr/GeolangLexer.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class GeolangLexer extends Lexer {
	public static readonly MultiLineComment = 1;
	public static readonly SingleLineComment = 2;
	public static readonly OpenBracket = 3;
	public static readonly CloseBracket = 4;
	public static readonly OpenParen = 5;
	public static readonly CloseParen = 6;
	public static readonly OpenBrace = 7;
	public static readonly CloseBrace = 8;
	public static readonly SemiColon = 9;
	public static readonly Comma = 10;
	public static readonly QuestionMark = 11;
	public static readonly Colon = 12;
	public static readonly Dot = 13;
	public static readonly Plus = 14;
	public static readonly Minus = 15;
	public static readonly Not = 16;
	public static readonly Multiply = 17;
	public static readonly Divide = 18;
	public static readonly Modulus = 19;
	public static readonly LessThan = 20;
	public static readonly MoreThan = 21;
	public static readonly LessThanEquals = 22;
	public static readonly GreaterThanEquals = 23;
	public static readonly Equals_ = 24;
	public static readonly NotEquals = 25;
	public static readonly And = 26;
	public static readonly Or = 27;
	public static readonly Layer = 28;
	public static readonly Scene = 29;
	public static readonly Import = 30;
	public static readonly From = 31;
	public static readonly As = 32;
	public static readonly Use = 33;
	public static readonly Where = 34;
	public static readonly Default = 35;
	public static readonly Log = 36;
	public static readonly Identifier = 37;
	public static readonly DecimalLiteral = 38;
	public static readonly StringLiteral = 39;
	public static readonly Tab = 40;
	public static readonly WhiteSpace = 41;
	public static readonly LineTerminator = 42;
	public static readonly UnexpectedCharacter = 43;
	public static readonly WS_CHANNEL = 2;
	public static readonly ERROR = 3;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "WS_CHANNEL", "ERROR",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"MultiLineComment", "SingleLineComment", "OpenBracket", "CloseBracket", 
		"OpenParen", "CloseParen", "OpenBrace", "CloseBrace", "SemiColon", "Comma", 
		"QuestionMark", "Colon", "Dot", "Plus", "Minus", "Not", "Multiply", "Divide", 
		"Modulus", "LessThan", "MoreThan", "LessThanEquals", "GreaterThanEquals", 
		"Equals_", "NotEquals", "And", "Or", "Layer", "Scene", "Import", "From", 
		"As", "Use", "Where", "Default", "Log", "Identifier", "DecimalLiteral", 
		"StringLiteral", "Tab", "WhiteSpace", "LineTerminator", "UnexpectedCharacter", 
		"DoubleStringCharacter", "SingleStringCharacter", "EscapeSequence", "CharacterEscapeSequence", 
		"SingleEscapeCharacter", "NonEscapeCharacter", "EscapeCharacter", "LineContinuation", 
		"DecimalIntegerLiteral", "IdentifierPart", "IdentifierStart", "Letter", 
		"Digit", "ConnectorPunctuation",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, "'['", "']'", "'('", "')'", "'{'", "'}'", 
		"';'", "','", "'?'", "':'", "'.'", "'+'", "'-'", "'!'", "'*'", "'/'", 
		"'%'", "'<'", "'>'", "'<='", "'>='", "'=='", "'!='", "'&&'", "'||'", "'layer'", 
		"'scene'", "'import'", "'from'", "'as'", "'use'", "'where'", "'default'", 
		"'log'", undefined, undefined, undefined, "'::'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "MultiLineComment", "SingleLineComment", "OpenBracket", "CloseBracket", 
		"OpenParen", "CloseParen", "OpenBrace", "CloseBrace", "SemiColon", "Comma", 
		"QuestionMark", "Colon", "Dot", "Plus", "Minus", "Not", "Multiply", "Divide", 
		"Modulus", "LessThan", "MoreThan", "LessThanEquals", "GreaterThanEquals", 
		"Equals_", "NotEquals", "And", "Or", "Layer", "Scene", "Import", "From", 
		"As", "Use", "Where", "Default", "Log", "Identifier", "DecimalLiteral", 
		"StringLiteral", "Tab", "WhiteSpace", "LineTerminator", "UnexpectedCharacter",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(GeolangLexer._LITERAL_NAMES, GeolangLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return GeolangLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(GeolangLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "GeolangLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return GeolangLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return GeolangLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return GeolangLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return GeolangLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02-\u0174\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x03\x02\x03\x02\x03" +
		"\x02\x03\x02\x07\x02z\n\x02\f\x02\x0E\x02}\v\x02\x03\x02\x03\x02\x03\x02" +
		"\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x07\x03\x88\n\x03\f\x03" +
		"\x0E\x03\x8B\v\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03" +
		"\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v" +
		"\x03\v\x03\f\x03\f\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10" +
		"\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13\x03\x14\x03\x14" +
		"\x03\x15\x03\x15\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18" +
		"\x03\x18\x03\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B" +
		"\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D" +
		"\x03\x1D\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F" +
		"\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03 \x03 \x03 \x03 \x03 \x03" +
		"!\x03!\x03!\x03\"\x03\"\x03\"\x03\"\x03#\x03#\x03#\x03#\x03#\x03#\x03" +
		"$\x03$\x03$\x03$\x03$\x03$\x03$\x03$\x03%\x03%\x03%\x03%\x03&\x03&\x07" +
		"&\xFA\n&\f&\x0E&\xFD\v&\x03\'\x05\'\u0100\n\'\x03\'\x03\'\x03\'\x07\'" +
		"\u0105\n\'\f\'\x0E\'\u0108\v\'\x05\'\u010A\n\'\x03\'\x03\'\x06\'\u010E" +
		"\n\'\r\'\x0E\'\u010F\x05\'\u0112\n\'\x03(\x03(\x07(\u0116\n(\f(\x0E(\u0119" +
		"\v(\x03(\x07(\u011C\n(\f(\x0E(\u011F\v(\x03(\x03(\x07(\u0123\n(\f(\x0E" +
		"(\u0126\v(\x03(\x05(\u0129\n(\x03)\x03)\x03)\x03*\x06*\u012F\n*\r*\x0E" +
		"*\u0130\x03*\x03*\x03+\x03+\x03,\x03,\x03,\x03,\x03-\x03-\x03-\x03-\x05" +
		"-\u013F\n-\x03.\x03.\x03.\x03.\x05.\u0145\n.\x03/\x03/\x05/\u0149\n/\x03" +
		"0\x030\x050\u014D\n0\x031\x031\x032\x032\x033\x033\x053\u0155\n3\x034" +
		"\x034\x034\x035\x035\x035\x075\u015D\n5\f5\x0E5\u0160\v5\x055\u0162\n" +
		"5\x036\x036\x036\x036\x056\u0168\n6\x037\x037\x057\u016C\n7\x038\x058" +
		"\u016F\n8\x039\x039\x03:\x03:\x03{\x02\x02;\x03\x02\x03\x05\x02\x04\x07" +
		"\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15" +
		"\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02" +
		"\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191" +
		"\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02" +
		"\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02)Q\x02*S\x02+U\x02,W\x02-" +
		"Y\x02\x02[\x02\x02]\x02\x02_\x02\x02a\x02\x02c\x02\x02e\x02\x02g\x02\x02" +
		"i\x02\x02k\x02\x02m\x02\x02o\x02\x02q\x02\x02s\x02\x02\x03\x02\x0E\x05" +
		"\x02\f\f\x0F\x0F\u202A\u202B\x03\x023;\x03\x022;\x04\x02\x0E\x0E\"\"\x06" +
		"\x02\f\f\x0F\x0F$$^^\x06\x02\f\f\x0F\x0F))^^\v\x02$$))^^ddhhppttvvxx\x0E" +
		"\x02\f\f\x0F\x0F$$))2;^^ddhhppttvxzz\x05\x022;wwzz\x04\x022;aa\x04\x02" +
		"&&aa\x04\x02C\\c|\x02\u017F\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02" +
		"\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02" +
		"\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02" +
		"\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02" +
		"\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02" +
		"\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02" +
		"%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03" +
		"\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02" +
		"\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x02" +
		"9\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02" +
		"\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02" +
		"\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03" +
		"\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02" +
		"\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02\x02\x03u\x03\x02\x02\x02\x05" +
		"\x83\x03\x02\x02\x02\x07\x8E\x03\x02\x02\x02\t\x90\x03\x02\x02\x02\v\x92" +
		"\x03\x02\x02\x02\r\x94\x03\x02\x02\x02\x0F\x96\x03\x02\x02\x02\x11\x98" +
		"\x03\x02\x02\x02\x13\x9A\x03\x02\x02\x02\x15\x9C\x03\x02\x02\x02\x17\x9E" +
		"\x03\x02\x02\x02\x19\xA0\x03\x02\x02\x02\x1B\xA2\x03\x02\x02\x02\x1D\xA4" +
		"\x03\x02\x02\x02\x1F\xA6\x03\x02\x02\x02!\xA8\x03\x02\x02\x02#\xAA\x03" +
		"\x02\x02\x02%\xAC\x03\x02\x02\x02\'\xAE\x03\x02\x02\x02)\xB0\x03\x02\x02" +
		"\x02+\xB2\x03\x02\x02\x02-\xB4\x03\x02\x02\x02/\xB7\x03\x02\x02\x021\xBA" +
		"\x03\x02\x02\x023\xBD\x03\x02\x02\x025\xC0\x03\x02\x02\x027\xC3\x03\x02" +
		"\x02\x029\xC6\x03\x02\x02\x02;\xCC\x03\x02\x02\x02=\xD2\x03\x02\x02\x02" +
		"?\xD9\x03\x02\x02\x02A\xDE\x03\x02\x02\x02C\xE1\x03\x02\x02\x02E\xE5\x03" +
		"\x02\x02\x02G\xEB\x03\x02\x02\x02I\xF3\x03\x02\x02\x02K\xF7\x03\x02\x02" +
		"\x02M\xFF\x03\x02\x02\x02O\u0128\x03\x02\x02\x02Q\u012A\x03\x02\x02\x02" +
		"S\u012E\x03\x02\x02\x02U\u0134\x03\x02\x02\x02W\u0136\x03\x02\x02\x02" +
		"Y\u013E\x03\x02\x02\x02[\u0144\x03\x02\x02\x02]\u0148\x03\x02\x02\x02" +
		"_\u014C\x03\x02\x02\x02a\u014E\x03\x02\x02\x02c\u0150\x03\x02\x02\x02" +
		"e\u0154\x03\x02\x02\x02g\u0156\x03\x02\x02\x02i\u0161\x03\x02\x02\x02" +
		"k\u0167\x03\x02\x02\x02m\u016B\x03\x02\x02\x02o\u016E\x03\x02\x02\x02" +
		"q\u0170\x03\x02\x02\x02s\u0172\x03\x02\x02\x02uv\x071\x02\x02vw\x07,\x02" +
		"\x02w{\x03\x02\x02\x02xz\v\x02\x02\x02yx\x03\x02\x02\x02z}\x03\x02\x02" +
		"\x02{|\x03\x02\x02\x02{y\x03\x02\x02\x02|~\x03\x02\x02\x02}{\x03\x02\x02" +
		"\x02~\x7F\x07,\x02\x02\x7F\x80\x071\x02\x02\x80\x81\x03\x02\x02\x02\x81" +
		"\x82\b\x02\x02\x02\x82\x04\x03\x02\x02\x02\x83\x84\x071\x02\x02\x84\x85" +
		"\x071\x02\x02\x85\x89\x03\x02\x02\x02\x86\x88\n\x02\x02\x02\x87\x86\x03" +
		"\x02\x02\x02\x88\x8B\x03\x02\x02\x02\x89\x87\x03\x02\x02\x02\x89\x8A\x03" +
		"\x02\x02\x02\x8A\x8C\x03\x02\x02\x02\x8B\x89\x03\x02\x02\x02\x8C\x8D\b" +
		"\x03\x02\x02\x8D\x06\x03\x02\x02\x02\x8E\x8F\x07]\x02\x02\x8F\b\x03\x02" +
		"\x02\x02\x90\x91\x07_\x02\x02\x91\n\x03\x02\x02\x02\x92\x93\x07*\x02\x02" +
		"\x93\f\x03\x02\x02\x02\x94\x95\x07+\x02\x02\x95\x0E\x03\x02\x02\x02\x96" +
		"\x97\x07}\x02\x02\x97\x10\x03\x02\x02\x02\x98\x99\x07\x7F\x02\x02\x99" +
		"\x12\x03\x02\x02\x02\x9A\x9B\x07=\x02\x02\x9B\x14\x03\x02\x02\x02\x9C" +
		"\x9D\x07.\x02\x02\x9D\x16\x03\x02\x02\x02\x9E\x9F\x07A\x02\x02\x9F\x18" +
		"\x03\x02\x02\x02\xA0\xA1\x07<\x02\x02\xA1\x1A\x03\x02\x02\x02\xA2\xA3" +
		"\x070\x02\x02\xA3\x1C\x03\x02\x02\x02\xA4\xA5\x07-\x02\x02\xA5\x1E\x03" +
		"\x02\x02\x02\xA6\xA7\x07/\x02\x02\xA7 \x03\x02\x02\x02\xA8\xA9\x07#\x02" +
		"\x02\xA9\"\x03\x02\x02\x02\xAA\xAB\x07,\x02\x02\xAB$\x03\x02\x02\x02\xAC" +
		"\xAD\x071\x02\x02\xAD&\x03\x02\x02\x02\xAE\xAF\x07\'\x02\x02\xAF(\x03" +
		"\x02\x02\x02\xB0\xB1\x07>\x02\x02\xB1*\x03\x02\x02\x02\xB2\xB3\x07@\x02" +
		"\x02\xB3,\x03\x02\x02\x02\xB4\xB5\x07>\x02\x02\xB5\xB6\x07?\x02\x02\xB6" +
		".\x03\x02\x02\x02\xB7\xB8\x07@\x02\x02\xB8\xB9\x07?\x02\x02\xB90\x03\x02" +
		"\x02\x02\xBA\xBB\x07?\x02\x02\xBB\xBC\x07?\x02\x02\xBC2\x03\x02\x02\x02" +
		"\xBD\xBE\x07#\x02\x02\xBE\xBF\x07?\x02\x02\xBF4\x03\x02\x02\x02\xC0\xC1" +
		"\x07(\x02\x02\xC1\xC2\x07(\x02\x02\xC26\x03\x02\x02\x02\xC3\xC4\x07~\x02" +
		"\x02\xC4\xC5\x07~\x02\x02\xC58\x03\x02\x02\x02\xC6\xC7\x07n\x02\x02\xC7" +
		"\xC8\x07c\x02\x02\xC8\xC9\x07{\x02\x02\xC9\xCA\x07g\x02\x02\xCA\xCB\x07" +
		"t\x02\x02\xCB:\x03\x02\x02\x02\xCC\xCD\x07u\x02\x02\xCD\xCE\x07e\x02\x02" +
		"\xCE\xCF\x07g\x02\x02\xCF\xD0\x07p\x02\x02\xD0\xD1\x07g\x02\x02\xD1<\x03" +
		"\x02\x02\x02\xD2\xD3\x07k\x02\x02\xD3\xD4\x07o\x02\x02\xD4\xD5\x07r\x02" +
		"\x02\xD5\xD6\x07q\x02\x02\xD6\xD7\x07t\x02\x02\xD7\xD8\x07v\x02\x02\xD8" +
		">\x03\x02\x02\x02\xD9\xDA\x07h\x02\x02\xDA\xDB\x07t\x02\x02\xDB\xDC\x07" +
		"q\x02\x02\xDC\xDD\x07o\x02\x02\xDD@\x03\x02\x02\x02\xDE\xDF\x07c\x02\x02" +
		"\xDF\xE0\x07u\x02\x02\xE0B\x03\x02\x02\x02\xE1\xE2\x07w\x02\x02\xE2\xE3" +
		"\x07u\x02\x02\xE3\xE4\x07g\x02\x02\xE4D\x03\x02\x02\x02\xE5\xE6\x07y\x02" +
		"\x02\xE6\xE7\x07j\x02\x02\xE7\xE8\x07g\x02\x02\xE8\xE9\x07t\x02\x02\xE9" +
		"\xEA\x07g\x02\x02\xEAF\x03\x02\x02\x02\xEB\xEC\x07f\x02\x02\xEC\xED\x07" +
		"g\x02\x02\xED\xEE\x07h\x02\x02\xEE\xEF\x07c\x02\x02\xEF\xF0\x07w\x02\x02" +
		"\xF0\xF1\x07n\x02\x02\xF1\xF2\x07v\x02\x02\xF2H\x03\x02\x02\x02\xF3\xF4" +
		"\x07n\x02\x02\xF4\xF5\x07q\x02\x02\xF5\xF6\x07i\x02\x02\xF6J\x03\x02\x02" +
		"\x02\xF7\xFB\x05m7\x02\xF8\xFA\x05k6\x02\xF9\xF8\x03\x02\x02\x02\xFA\xFD" +
		"\x03\x02\x02\x02\xFB\xF9\x03\x02\x02\x02\xFB\xFC\x03\x02\x02\x02\xFCL" +
		"\x03\x02\x02\x02\xFD\xFB\x03\x02\x02\x02\xFE\u0100\x07/\x02\x02\xFF\xFE" +
		"\x03\x02\x02\x02\xFF\u0100\x03\x02\x02\x02\u0100\u0109\x03\x02\x02\x02" +
		"\u0101\u010A\x072\x02\x02\u0102\u0106\t\x03\x02\x02\u0103\u0105\t\x04" +
		"\x02\x02\u0104\u0103\x03\x02\x02\x02\u0105\u0108\x03\x02\x02\x02\u0106" +
		"\u0104\x03\x02\x02\x02\u0106\u0107\x03\x02\x02\x02\u0107\u010A\x03\x02" +
		"\x02\x02\u0108\u0106\x03\x02\x02\x02\u0109\u0101\x03\x02\x02\x02\u0109" +
		"\u0102\x03\x02\x02\x02\u010A\u0111\x03\x02\x02\x02\u010B\u010D\x070\x02" +
		"\x02\u010C\u010E\t\x04\x02\x02\u010D\u010C\x03\x02\x02\x02\u010E\u010F" +
		"\x03\x02\x02\x02\u010F\u010D\x03\x02\x02\x02\u010F\u0110\x03\x02\x02\x02" +
		"\u0110\u0112\x03\x02\x02\x02\u0111\u010B\x03\x02\x02\x02\u0111\u0112\x03" +
		"\x02\x02\x02\u0112N\x03\x02\x02\x02\u0113\u0117\x07$\x02\x02\u0114\u0116" +
		"\x05Y-\x02\u0115\u0114\x03\x02\x02\x02\u0116\u0119\x03\x02\x02\x02\u0117" +
		"\u0115\x03\x02\x02\x02\u0117\u0118\x03\x02\x02\x02\u0118\u011D\x03\x02" +
		"\x02\x02\u0119\u0117\x03\x02\x02\x02\u011A\u011C\x07$\x02\x02\u011B\u011A" +
		"\x03\x02\x02\x02\u011C\u011F\x03\x02\x02\x02\u011D\u011B\x03\x02\x02\x02" +
		"\u011D\u011E\x03\x02\x02\x02\u011E\u0129\x03\x02\x02\x02\u011F\u011D\x03" +
		"\x02\x02\x02\u0120\u0124\x07)\x02\x02\u0121\u0123\x05[.\x02\u0122\u0121" +
		"\x03\x02\x02\x02\u0123\u0126\x03\x02\x02\x02\u0124\u0122\x03\x02\x02\x02" +
		"\u0124\u0125\x03\x02\x02\x02\u0125\u0127\x03\x02\x02\x02\u0126\u0124\x03" +
		"\x02\x02\x02\u0127\u0129\x07)\x02\x02\u0128\u0113\x03\x02\x02\x02\u0128" +
		"\u0120\x03\x02\x02\x02\u0129P\x03\x02\x02\x02\u012A\u012B\x07<\x02\x02" +
		"\u012B\u012C\x07<\x02\x02\u012CR\x03\x02\x02\x02\u012D\u012F\t\x05\x02" +
		"\x02\u012E\u012D\x03\x02\x02\x02\u012F\u0130\x03\x02\x02\x02\u0130\u012E" +
		"\x03\x02\x02\x02\u0130\u0131\x03\x02\x02\x02\u0131\u0132\x03\x02\x02\x02" +
		"\u0132\u0133\b*\x02\x02\u0133T\x03\x02\x02\x02\u0134\u0135\t\x02\x02\x02" +
		"\u0135V\x03\x02\x02\x02\u0136\u0137\v\x02\x02\x02\u0137\u0138\x03\x02" +
		"\x02\x02\u0138\u0139\b,\x03\x02\u0139X\x03\x02\x02\x02\u013A\u013F\n\x06" +
		"\x02\x02\u013B\u013C\x07^\x02\x02\u013C\u013F\x05]/\x02\u013D\u013F\x05" +
		"g4\x02\u013E\u013A\x03\x02\x02\x02\u013E\u013B\x03\x02\x02\x02\u013E\u013D" +
		"\x03\x02\x02\x02\u013FZ\x03\x02\x02\x02\u0140\u0145\n\x07\x02\x02\u0141" +
		"\u0142\x07^\x02\x02\u0142\u0145\x05]/\x02\u0143\u0145\x05g4\x02\u0144" +
		"\u0140\x03\x02\x02\x02\u0144\u0141\x03\x02\x02\x02\u0144\u0143\x03\x02" +
		"\x02\x02\u0145\\\x03\x02\x02\x02\u0146\u0149\x05_0\x02\u0147\u0149\x07" +
		"2\x02\x02\u0148\u0146\x03\x02\x02\x02\u0148\u0147\x03\x02\x02\x02\u0149" +
		"^\x03\x02\x02\x02\u014A\u014D\x05a1\x02\u014B\u014D\x05c2\x02\u014C\u014A" +
		"\x03\x02\x02\x02\u014C\u014B\x03\x02\x02\x02\u014D`\x03\x02\x02\x02\u014E" +
		"\u014F\t\b\x02\x02\u014Fb\x03\x02\x02\x02\u0150\u0151\n\t\x02\x02\u0151" +
		"d\x03\x02\x02\x02\u0152\u0155\x05a1\x02\u0153\u0155\t\n\x02\x02\u0154" +
		"\u0152\x03\x02\x02\x02\u0154\u0153\x03\x02\x02\x02\u0155f\x03\x02\x02" +
		"\x02\u0156\u0157\x07^\x02\x02\u0157\u0158\t\x02\x02\x02\u0158h\x03\x02" +
		"\x02\x02\u0159\u0162\x072\x02\x02\u015A\u015E\t\x03\x02\x02\u015B\u015D" +
		"\t\v\x02\x02\u015C\u015B\x03\x02\x02\x02\u015D\u0160\x03\x02\x02\x02\u015E" +
		"\u015C\x03\x02\x02\x02\u015E\u015F\x03\x02\x02\x02\u015F\u0162\x03\x02" +
		"\x02\x02\u0160\u015E\x03\x02\x02\x02\u0161\u0159\x03\x02\x02\x02\u0161" +
		"\u015A\x03\x02\x02\x02\u0162j\x03\x02\x02\x02\u0163\u0168\x05m7\x02\u0164" +
		"\u0168\x05q9\x02\u0165\u0168\x05s:\x02\u0166\u0168\x04\u200E\u200F\x02" +
		"\u0167\u0163\x03\x02\x02\x02\u0167\u0164\x03\x02\x02\x02\u0167\u0165\x03" +
		"\x02\x02\x02\u0167\u0166\x03\x02\x02\x02\u0168l\x03\x02\x02\x02\u0169" +
		"\u016C\x05o8\x02\u016A\u016C\t\f\x02\x02\u016B\u0169\x03\x02\x02\x02\u016B" +
		"\u016A\x03\x02\x02\x02\u016Cn\x03\x02\x02\x02\u016D\u016F\t\r\x02\x02" +
		"\u016E\u016D\x03\x02\x02\x02\u016Fp\x03\x02\x02\x02\u0170\u0171\t\x04" +
		"\x02\x02\u0171r\x03\x02\x02\x02\u0172\u0173\x07a\x02\x02\u0173t\x03\x02" +
		"\x02\x02\x1A\x02{\x89\xFB\xFF\u0106\u0109\u010F\u0111\u0117\u011D\u0124" +
		"\u0128\u0130\u013E\u0144\u0148\u014C\u0154\u015E\u0161\u0167\u016B\u016E" +
		"\x04\x02\x03\x02\x02\x05\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!GeolangLexer.__ATN) {
			GeolangLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(GeolangLexer._serializedATN));
		}

		return GeolangLexer.__ATN;
	}

}

